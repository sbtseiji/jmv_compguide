{"version":3,"sources":["../src/1.2.1.js"],"names":["rx","leftTarget","japaneseRegExp","rightTarget","replaceSymbol","reporter","context","Syntax","RuleError","report","fixer","getSource","Str","node","text","leftMatches","rightMatches","matches","forEach","match","symbol","indexOfSymbol","index","fix","replaceTextRange","module","exports","linter"],"mappings":"AAAA;AACA;;AACA;;AACA;;AACA;;AACA;;AAOA;;;;;;;;AANA,IAAMA,EAAE,GAAG,mBAAK,GAAL,CAAX;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA,IAAMC,UAAU,GAAGD,EAAH,sJAENE,sBAFM,CAAhB,C,CAIA;;AACA,IAAMC,WAAW,GAAGH,EAAH,wJACPE,sBADO,CAAjB,C,CAIA;;AACA,IAAME,aAAa,GAAG;AAClB,OAAK,GADa;AAElB,OAAK;AAFa,CAAtB;;AAKA,IAAMC,QAAQ,GAAIC,OAAD,IAAa;AAC1B,MAAI;AAAEC,IAAAA,MAAF;AAAUC,IAAAA,SAAV;AAAqBC,IAAAA,MAArB;AAA6BC,IAAAA,KAA7B;AAAoCC,IAAAA;AAApC,MAAkDL,OAAtD;AACA,SAAO;AACH,KAACC,MAAM,CAACK,GAAR,EAAaC,IAAb,EAAmB;AACf,UAAI,CAAC,iCAAkBA,IAAlB,EAAwBP,OAAxB,CAAL,EAAuC;AACnC;AACH;;AACD,UAAMQ,IAAI,GAAGH,SAAS,CAACE,IAAD,CAAtB;AACA,UAAME,WAAW,GAAG,sCAAqBD,IAArB,EAA2Bb,UAA3B,CAApB;AACA,UAAMe,YAAY,GAAG,sCAAqBF,IAArB,EAA2BX,WAA3B,CAArB;AACA,UAAMc,OAAO,GAAG,2BAAaF,WAAb,EAA0BC,YAA1B,CAAhB;AACAC,MAAAA,OAAO,CAACC,OAAR,CAAiBC,KAAD,IAAW;AACvB,YAAMC,MAAM,GAAGhB,aAAa,CAACe,KAAK,CAACL,IAAP,CAA5B;AACA,YAAMO,aAAa,GAAGF,KAAK,CAACG,KAA5B;AACAb,QAAAA,MAAM,CACFI,IADE,EAEF,IAAIL,SAAJ,CACI,sDADJ,EAEI;AACIc,UAAAA,KAAK,EAAED,aADX;AAEIE,UAAAA,GAAG,EAAEb,KAAK,CAACc,gBAAN,CAAuB,CAACH,aAAD,EAAgBA,aAAa,GAAG,CAAhC,CAAvB,EAA2DD,MAA3D;AAFT,SAFJ,CAFE,CAAN;AAUH,OAbD;AAcH;;AAvBE,GAAP;AAyBH,CA3BD;;AA4BAK,MAAM,CAACC,OAAP,GAAiB;AACbC,EAAAA,MAAM,EAAEtB,QADK;AAEbK,EAAAA,KAAK,EAAEL;AAFM,CAAjB","sourcesContent":["// LICENSE : MIT\n\"use strict\";\nimport regx from \"regx\";\nimport { japaneseRegExp } from \"./util/regexp\";\nimport { matchCaptureGroupAll } from \"match-index\";\nimport mergeMatches from \"./util/merge-matches\";\nconst rx = regx(\"g\");\n/*\n1.2.1. 句点(。)と読点(、)\n句読点には全角の「、」と「。」を使います。和文の句読点としてピリオド(.)とカンマ(,)を使用しません。\n「4.1.1 句点(。)」と「4.1.2 読点(、)」を参照してください。\n */\nimport { isUserWrittenNode } from \"./util/node-util\";\n\n// [,.]{日本語}\nconst leftTarget = rx`\n        ([,\\.])\n        ${japaneseRegExp}\n    `;\n// {日本語}[,.]\nconst rightTarget = rx`\n        ${japaneseRegExp}\n        ([,\\.])\n    `;\n// . => 。 の置換マップ\nconst replaceSymbol = {\n    \".\": \"。\",\n    \",\": \"、\"\n};\n\nconst reporter = (context) => {\n    let { Syntax, RuleError, report, fixer, getSource } = context;\n    return {\n        [Syntax.Str](node) {\n            if (!isUserWrittenNode(node, context)) {\n                return;\n            }\n            const text = getSource(node);\n            const leftMatches = matchCaptureGroupAll(text, leftTarget);\n            const rightMatches = matchCaptureGroupAll(text, rightTarget);\n            const matches = mergeMatches(leftMatches, rightMatches);\n            matches.forEach((match) => {\n                const symbol = replaceSymbol[match.text];\n                const indexOfSymbol = match.index;\n                report(\n                    node,\n                    new RuleError(\n                        \"句読点には全角の「、」と「。」を使います。和文の句読点としてピリオド(.)とカンマ(,)を使用しません。\",\n                        {\n                            index: indexOfSymbol,\n                            fix: fixer.replaceTextRange([indexOfSymbol, indexOfSymbol + 1], symbol)\n                        }\n                    )\n                );\n            });\n        }\n    };\n};\nmodule.exports = {\n    linter: reporter,\n    fixer: reporter\n};\n"],"file":"1.2.1.js"}