{"version":3,"sources":["../src/4.3.2.js"],"names":["rx","replaceSymbol","symbol","newSymbol","Error","reporter","context","Syntax","RuleError","report","fixer","getSource","Str","node","text","matchRegExp","japaneseRegExp","forEach","match","index","fix","replaceTextRange","module","exports","linter"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;;AACA;;AACA;;AACA;;;;;;;;AACA,IAAMA,EAAE,GAAG,mBAAK,GAAL,CAAX;;AAEA,IAAMC,aAAa,GAAIC,MAAD,IAAY;AAC9B,MAAIC,SAAS,GAAG;AACZ,SAAK,GADO;AAEZ,SAAK;AAFO,IAGdD,MAHc,CAAhB;;AAIA,MAAI,CAACC,SAAL,EAAgB;AACZ,UAAM,IAAIC,KAAJ,CAAU,wBAAV,CAAN;AACH;;AACD,SAAOD,SAAP;AACH,CATD;;AAUA,SAASE,QAAT,CAAkBC,OAAlB,EAA2B;AACvB,MAAI;AAAEC,IAAAA,MAAF;AAAUC,IAAAA,SAAV;AAAqBC,IAAAA,MAArB;AAA6BC,IAAAA,KAA7B;AAAoCC,IAAAA;AAApC,MAAkDL,OAAtD;AACA,SAAO;AACH,KAACC,MAAM,CAACK,GAAR,EAAaC,IAAb,EAAmB;AACf,UAAI,CAAC,iCAAkBA,IAAlB,EAAwBP,OAAxB,CAAL,EAAuC;AACnC;AACH,OAHc,CAIf;;;AACA,UAAMQ,IAAI,GAAGH,SAAS,CAACE,IAAD,CAAtB;AACA,UAAME,WAAW,GAAGf,EAAH,4GAAWgB,sBAAX,CAAjB;AACA,4CAAqBF,IAArB,EAA2BC,WAA3B,EAAwCE,OAAxC,CAAiDC,KAAD,IAAW;AACvD,YAAM;AAAEC,UAAAA;AAAF,YAAYD,KAAlB;AACAT,QAAAA,MAAM,CACFI,IADE,EAEF,IAAIL,SAAJ,CAAc,uCAAd,EAAuD;AACnDW,UAAAA,KAAK,EAAEA,KAD4C;AAEnDC,UAAAA,GAAG,EAAEV,KAAK,CAACW,gBAAN,CAAuB,CAACF,KAAD,EAAQA,KAAK,GAAG,CAAhB,CAAvB,EAA2ClB,aAAa,CAACiB,KAAK,CAACJ,IAAP,CAAxD;AAF8C,SAAvD,CAFE,CAAN;AAOH,OATD;AAUH;;AAlBE,GAAP;AAoBH;;AACDQ,MAAM,CAACC,OAAP,GAAiB;AACbC,EAAAA,MAAM,EAAEnB,QADK;AAEbK,EAAAA,KAAK,EAAEL;AAFM,CAAjB","sourcesContent":["// LICENSE : MIT\n\"use strict\";\n/*\n4.3.2.大かっこ［］\nコンピューターの画面用語などの特殊な表記で使用します。\n全角の大かっこを使用します\n */\nimport { isUserWrittenNode } from \"./util/node-util\";\nimport { matchCaptureGroupAll } from \"match-index\";\nimport regx from \"regx\";\nimport { japaneseRegExp } from \"./util/regexp\";\nconst rx = regx(\"g\");\n\nconst replaceSymbol = (symbol) => {\n    var newSymbol = {\n        \"[\": \"［\",\n        \"]\": \"］\"\n    }[symbol];\n    if (!newSymbol) {\n        throw new Error(\"fail to replace symbol\");\n    }\n    return newSymbol;\n};\nfunction reporter(context) {\n    let { Syntax, RuleError, report, fixer, getSource } = context;\n    return {\n        [Syntax.Str](node) {\n            if (!isUserWrittenNode(node, context)) {\n                return;\n            }\n            // 半角のかっこ[]は使用しないで全角のかっこを使用する\n            const text = getSource(node);\n            const matchRegExp = rx`(?:${japaneseRegExp})([\\[\\]])`;\n            matchCaptureGroupAll(text, matchRegExp).forEach((match) => {\n                const { index } = match;\n                report(\n                    node,\n                    new RuleError(\"半角の大かっこ[]が使用されています。全角のかっこ［］を使用してください。\", {\n                        index: index,\n                        fix: fixer.replaceTextRange([index, index + 1], replaceSymbol(match.text))\n                    })\n                );\n            });\n        }\n    };\n}\nmodule.exports = {\n    linter: reporter,\n    fixer: reporter\n};\n"],"file":"4.3.2.js"}