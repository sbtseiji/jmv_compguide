{"version":3,"sources":["../src/1.1.3.js"],"names":["module","exports","context","Syntax","RuleError","report","getSource","desumasuList","dearuList","withPointList","withoutPointList","resetList","reportPointResult","nodeList","shouldUsePoint","forEach","node","message","reportDesumaruDearuResult","list","desumasu","dearu","matches","match","value","line","lineNumber","column","columnIndex","countingPoint","length","countingDesumasuDearu","desumasuCount","reduce","count","dearuCount","List","ListItem","text","matchPointReg","test","push","retDesumasu","retDearu"],"mappings":"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","sourcesContent":["// LICENSE : MIT\n\"use strict\";\n/*\n1.1.3.箇条書き\n\n基本的に本文の文体に合わせます。\nただし、本文が「敬体」である場合、箇条書きに「常体」または「体言止め」も使う場合があります。\n一般読者向け の文書で、本文が敬体である場合、多くの場合、箇条書きでも敬体を使います。\n本文が「常体」である場合、箇条書きには「常体」または「体言止め」を使います。「敬体」は使いません。\nいずれの場合も、ひとまとまりの箇条書きでは、敬体と常体を混在させません。文末に句点(。)を付けるかどうかも統一します。\n */\nimport { analyzeDesumasu, analyzeDearu } from \"analyze-desumasu-dearu\";\nmodule.exports = function (context) {\n    let { Syntax, RuleError, report, getSource } = context;\n    let desumasuList = [];\n    let dearuList = [];\n    // 。付きのListItem\n    let withPointList = [];\n    // 。なしのListItem\n    let withoutPointList = [];\n\n    function resetList() {\n        dearuList = [];\n        desumasuList = [];\n        withPointList = [];\n        withoutPointList = [];\n    }\n\n    function reportPointResult(nodeList, { shouldUsePoint }) {\n        nodeList.forEach((node) => {\n            let message;\n            if (shouldUsePoint) {\n                message = `箇条書きの文末に句点(。)を付けて下さい。\\n箇条書きの文末に句点(。)を付けるかを統一します。`;\n            } else {\n                message = `箇条書きの文末から句点(。)を外して下さい。\\n箇条書きの文末に句点(。)を付けるかを統一します。`;\n            }\n            report(node, new RuleError(message));\n        });\n    }\n\n    function reportDesumaruDearuResult(list, { desumasu, dearu }) {\n        list.forEach(({ node, matches }) => {\n            matches.forEach((match) => {\n                let message;\n                if (desumasu) {\n                    message = `箇条書きを敬体(ですます調)に統一して下さい。\\nひとまとまりの箇条書きでは、敬体と常体を混在させません。\\n\"${match.value}\"が常体(である調)です。`;\n                } else if (dearu) {\n                    message = `箇条書きを常体(である調)に統一して下さい。\\nひとまとまりの箇条書きでは、敬体と常体を混在させません。\\n\"${match.value}\"が敬体(ですます調)です。`;\n                }\n                report(\n                    node,\n                    new RuleError(message, {\n                        line: match.lineNumber - 1,\n                        column: match.columnIndex\n                    })\n                );\n            });\n        });\n    }\n\n    // 末尾に。があるかが統一されているのチェック\n    function countingPoint(withPointList, withoutPointList) {\n        if (withPointList.length === 0 || withoutPointList.length === 0) {\n            return;\n        }\n        if (withPointList.length > withoutPointList.length) {\n            // 。ありに統一\n            reportPointResult(withoutPointList, {\n                shouldUsePoint: true\n            });\n        } else if (withPointList.length < withoutPointList.length) {\n            // 。なしに統一\n            reportPointResult(withPointList, {\n                shouldUsePoint: false\n            });\n        } else {\n            // 。ありに統一\n            reportPointResult(withoutPointList, {\n                shouldUsePoint: true\n            });\n        }\n    }\n\n    // 敬体(ですます調)あるいは常体(である調)なのかのチェック\n    function countingDesumasuDearu(desumasuList, dearuList) {\n        let desumasuCount = desumasuList.reduce((count, { matches }) => count + matches.length, 0);\n        let dearuCount = dearuList.reduce((count, { matches }) => count + matches.length, 0);\n        if (desumasuCount === 0 || dearuCount === 0) {\n            return;\n        }\n        // ですます優先\n        if (desumasuCount > dearuCount) {\n            reportDesumaruDearuResult(dearuList, {\n                desumasu: true\n            });\n        } else if (desumasuCount < dearuCount) {\n            // である優先\n            reportDesumaruDearuResult(desumasuList, {\n                dearu: true\n            });\n        } else {\n            // 同等の場合はですます優先\n            reportDesumaruDearuResult(dearuList, {\n                desumasu: true\n            });\n        }\n    }\n\n    return {\n        [Syntax.List](node) {\n            resetList();\n        },\n        [Syntax.ListItem](node) {\n            let text = getSource(node);\n            // 末尾に。があるかが統一されているのチェック\n            let matchPointReg = /。(\\s*?)$/;\n            if (matchPointReg.test(text)) {\n                // 。あり\n                withPointList.push(node);\n            } else {\n                // 。なし\n                withoutPointList.push(node);\n            }\n            // 敬体(ですます調)あるいは常体(である調)なのかのチェック\n            let retDesumasu = analyzeDesumasu(text);\n            if (retDesumasu.length > 0) {\n                desumasuList.push({\n                    node: node,\n                    matches: retDesumasu\n                });\n            }\n            let retDearu = analyzeDearu(text);\n            if (retDearu.length > 0) {\n                dearuList.push({\n                    node: node,\n                    matches: retDearu\n                });\n            }\n        },\n        [`${Syntax.List}:exit`](node) {\n            countingPoint(withPointList, withoutPointList);\n\n            countingDesumasuDearu(desumasuList, dearuList);\n        }\n    };\n};\n"],"file":"1.1.3.js"}