{"version":3,"sources":["../src/4.2.4.js"],"names":["rx","reporter","context","Syntax","RuleError","report","fixer","getSource","Str","node","text","matchHanNakaguro","japaneseRegExp","forEach","match","index","fix","replaceTextRange","module","exports","linter"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;;AACA;;AACA;;AACA;;;;;;;;AACA,IAAMA,EAAE,GAAG,mBAAK,GAAL,CAAX;;AACA,SAASC,QAAT,CAAkBC,OAAlB,EAA2B;AACvB,MAAI;AAAEC,IAAAA,MAAF;AAAUC,IAAAA,SAAV;AAAqBC,IAAAA,MAArB;AAA6BC,IAAAA,KAA7B;AAAoCC,IAAAA;AAApC,MAAkDL,OAAtD;AACA,SAAO;AACH,KAACC,MAAM,CAACK,GAAR,EAAaC,IAAb,EAAmB;AACf,UAAI,CAAC,iCAAkBA,IAAlB,EAAwBP,OAAxB,CAAL,EAAuC;AACnC;AACH;;AACD,UAAMQ,IAAI,GAAGH,SAAS,CAACE,IAAD,CAAtB,CAJe,CAKf;;AACA,UAAME,gBAAgB,GAAGX,EAAH,gHAAWY,sBAAX,EAA4CA,sBAA5C,CAAtB;AACA,4CAAqBF,IAArB,EAA2BC,gBAA3B,EAA6CE,OAA7C,CAAsDC,KAAD,IAAW;AAC5D,YAAM;AAAEC,UAAAA;AAAF,YAAYD,KAAlB;AACAT,QAAAA,MAAM,CACFI,IADE,EAEF,IAAIL,SAAJ,CACI,+CADJ,EAEI;AACIW,UAAAA,KAAK,EAAEA,KADX;AAEIC,UAAAA,GAAG,EAAEV,KAAK,CAACW,gBAAN,CAAuB,CAACF,KAAD,EAAQA,KAAK,GAAG,CAAhB,CAAvB,EAA2C,GAA3C;AAFT,SAFJ,CAFE,CAAN;AAUH,OAZD;AAaH;;AArBE,GAAP;AAuBH;;AACDG,MAAM,CAACC,OAAP,GAAiB;AACbC,EAAAA,MAAM,EAAEnB,QADK;AAEbK,EAAAA,KAAK,EAAEL;AAFM,CAAjB","sourcesContent":["// LICENSE : MIT\n\"use strict\";\n/*\n4.2.4.中黒(・)\nカタカナ複合語を区切る場合、同格の語句を並列する場合に使用します。\n同一の文書で、カタカナ複合語の区切りに中黒を使い、同格の語句の並列にも中黒を使用するのは、お勧めしません。\n読み手の理解を妨げる場合があるからです。「2.1.7 カタカナ複合語」を参照してください\n\n「･」と「・」\n */\nimport { isUserWrittenNode } from \"./util/node-util\";\nimport { matchCaptureGroupAll } from \"match-index\";\nimport regx from \"regx\";\nimport { japaneseRegExp } from \"./util/regexp\";\nconst rx = regx(\"g\");\nfunction reporter(context) {\n    let { Syntax, RuleError, report, fixer, getSource } = context;\n    return {\n        [Syntax.Str](node) {\n            if (!isUserWrittenNode(node, context)) {\n                return;\n            }\n            const text = getSource(node);\n            // 和文で半角の･は利用しない\n            const matchHanNakaguro = rx`(?:${japaneseRegExp}|[a-zA-Z])(･)(?:${japaneseRegExp}|[a-zA-Z])`;\n            matchCaptureGroupAll(text, matchHanNakaguro).forEach((match) => {\n                const { index } = match;\n                report(\n                    node,\n                    new RuleError(\n                        \"カタカナ複合語を区切る場合または同格の語句を並列する場合には全角の中黒（・）を使用します。\",\n                        {\n                            index: index,\n                            fix: fixer.replaceTextRange([index, index + 1], \"・\")\n                        }\n                    )\n                );\n            });\n        }\n    };\n}\nmodule.exports = {\n    linter: reporter,\n    fixer: reporter\n};\n"],"file":"4.2.4.js"}