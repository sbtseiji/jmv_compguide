{"version":3,"sources":["../src/3.1.2.js"],"names":["rx","reporter","context","Syntax","RuleError","report","fixer","getSource","Str","node","text","matchReg","japaneseRegExp","katakakana","forEach","match","input","captureGroups","test","captureGroup","index","fix","replaceTextRange","module","exports","linter"],"mappings":"AAAA;AACA;;AACA;;AACA;;AACA;;AACA;;;;;;;;AACA,IAAMA,EAAE,GAAG,mBAAK,GAAL,CAAX;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASC,QAAT,CAAkBC,OAAlB,EAA2B;AACvB,MAAI;AAAEC,IAAAA,MAAF;AAAUC,IAAAA,SAAV;AAAqBC,IAAAA,MAArB;AAA6BC,IAAAA,KAA7B;AAAoCC,IAAAA;AAApC,MAAkDL,OAAtD;AACA,SAAO;AACH,KAACC,MAAM,CAACK,GAAR,EAAaC,IAAb,EAAmB;AACf,UAAI,CAAC,iCAAkBA,IAAlB,EAAwBP,OAAxB,CAAL,EAAuC;AACnC;AACH;;AACD,UAAMQ,IAAI,GAAGH,SAAS,CAACE,IAAD,CAAtB,CAJe,CAKf;;AACA,UAAME,QAAQ,GAAGX,EAAH,iFAAQY,sBAAR,EAA4BA,sBAA5B,CAAd;AACA,UAAMC,UAAU,GAAG,eAAnB;AACA,gCAASH,IAAT,EAAeC,QAAf,EAAyBG,OAAzB,CAAkCC,KAAD,IAAW;AACxC,YAAM;AAAEC,UAAAA,KAAF;AAASC,UAAAA;AAAT,YAA2BF,KAAjC,CADwC,CAExC;;AACA,YAAIF,UAAU,CAACK,IAAX,CAAgBF,KAAhB,CAAJ,EAA4B;AACxB;AACH;;AACDC,QAAAA,aAAa,CAACH,OAAd,CAAuBK,YAAD,IAAkB;AACpC,cAAMC,KAAK,GAAGD,YAAY,CAACC,KAA3B;AACAf,UAAAA,MAAM,CACFI,IADE,EAEF,IAAIL,SAAJ,CAAc,6BAAd,EAA6C;AACzCgB,YAAAA,KAAK,EAAEA,KADkC;AAEzCC,YAAAA,GAAG,EAAEf,KAAK,CAACgB,gBAAN,CAAuB,CAACF,KAAD,EAAQA,KAAK,GAAG,CAAhB,CAAvB,EAA2C,EAA3C;AAFoC,WAA7C,CAFE,CAAN;AAOH,SATD;AAUH,OAhBD;AAiBH;;AA1BE,GAAP;AA4BH;;AACDG,MAAM,CAACC,OAAP,GAAiB;AACbC,EAAAA,MAAM,EAAExB,QADK;AAEbK,EAAAA,KAAK,EAAEL;AAFM,CAAjB","sourcesContent":["// LICENSE : MIT\n\"use strict\";\nimport { isUserWrittenNode } from \"./util/node-util\";\nimport { matchAll } from \"match-index\";\nimport regx from \"regx\";\nimport { japaneseRegExp } from \"./util/regexp\";\nconst rx = regx(\"g\");\n/*\n3.1.2. 全角文字どうし\n\n原則として、全角文字どうしの間にスペースを入れません。ただしカタカナ複合語の場合を除きます。\n「2.1.7 カタカナ複合語」を参照してください。\n */\nfunction reporter(context) {\n    let { Syntax, RuleError, report, fixer, getSource } = context;\n    return {\n        [Syntax.Str](node) {\n            if (!isUserWrittenNode(node, context)) {\n                return;\n            }\n            const text = getSource(node);\n            // 全角同士の間は半角スペースを入れない\n            const matchReg = rx`${japaneseRegExp}( )${japaneseRegExp}`;\n            const katakakana = /[ァ-ヶ]( )[ァ-ヶ]/;\n            matchAll(text, matchReg).forEach((match) => {\n                const { input, captureGroups } = match;\n                // ただしカタカナ複合語の場合を除きます。\n                if (katakakana.test(input)) {\n                    return;\n                }\n                captureGroups.forEach((captureGroup) => {\n                    const index = captureGroup.index;\n                    report(\n                        node,\n                        new RuleError(\"原則として、全角文字どうしの間にスペースを入れません。\", {\n                            index: index,\n                            fix: fixer.replaceTextRange([index, index + 1], \"\")\n                        })\n                    );\n                });\n            });\n        }\n    };\n}\nmodule.exports = {\n    linter: reporter,\n    fixer: reporter\n};\n"],"file":"3.1.2.js"}